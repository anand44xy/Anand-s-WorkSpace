//Complexity Analysis and Array Assignment -> 1D Array Assignment

Q.1 Write a program to traverse over the elements of the array using for each loop and print all even elements.
Ans public class UtilitiesX {

    public static void main(String[] args) {
        int[] arr={3,20,4,6,9};
        int sum=0;
        for(int i=0; iarr.length; i+=2){
            if(i%2==0){
            sum+=arr[i];
            
        }
        System.err.println(Sum of the even indices is+sum);
    }
}

OUTPUT Sum of the even indices is 16

Q.2 Write a program to traverse over the elements of the array using for each loop and print all even elements.
Ans public class UtilitiesX {
    public static void main(String[] args) {
        int[] arr = {34,21,54,65,43};
        for (int num  arr) {
            if(num % 2==0 ){
                System.out.println(num);
            }
        }
    }   
}
OUTPUT 34
                 54

Q.3 Write a program to calculate the maximum element in the array.
Ans 

public class UtilitiesX {

    public static void main(String[] args) {
        int[] arr = {34,21,54,65,43};
        int maxNo=arr[0];
        for(int i=1; iarr.length; i++){
            if(arr[i]maxNo){
                maxNo=arr[i];
            }
        }
      System.out.println(Maximum Number in this array is +maxNo);
    }
}

OUTPUT Maximum Number in this array is 65

Q.4 Write a program to find out the second largest element in a given array.
Answer 
import java.util.Arrays;
public class UtilitiesX {
    public static void main(String[] args) {
        int[] arr = {34,21,54,65,43};
         Arrays.sort(arr);
         int SecondlargestNo=arr[arr.length-2];
         System.out.println(The second largest number is +SecondlargestNo);
    }   
}
OUTPUT The second largest number is 54    

Q.5 Given an array. Find the first peak element in the array. A peak element is an element that is greater than its just left and just right neighbor.
Answer 
public class UtilitiesX {
    public static void main(String[] args) {
        int[] arr = {1,3,2,6,5};
    for(int i=1; iarr.length-1;i++){
        if(arr[i]arr[i-1] && arr[i] arr[i+1]){
            System.out.println(The first peak element in this array is +arr[i]);
            break;
        }
    }
         }   
}
    



