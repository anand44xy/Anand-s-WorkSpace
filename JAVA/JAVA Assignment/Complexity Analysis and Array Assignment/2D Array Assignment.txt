//Complexity Analysis and Array Assignment -> 2D Array Assignment

Q1: Take m and n input from the user and m * n integer inputs from user and print the following:
number of positive numbers
number of negative numbers
number of odd numbers
number of even numbers
number of 0.
Answer: 
import java.util.Scanner;
public class anand44xy {
    public static void main(String[] args) throws Exception{
        //Taking the input form user m and n
        Scanner scn=new Scanner(System.in);
        System.out.println("Enter the number of rows(m): ");
        int m=scn.nextInt();
        System.out.println("Enter the number of columns(n): ");
        int n=scn.nextInt();

        int[][] arr=new int[m][n];
        //Get the elements from the user
       System.out.println("Enter the elements:");
       for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            arr[i][j] = scn.nextInt();
        }
    }
    
    //Printing the elements that you enenterd
  System.out.println("Elements that you entered:");
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            System.out.print(arr[i][j] + " ");
        }
        System.out.println();
    }

       //Variables
       int posNo = 0;
       int negNo=0;
       int zeroNo=0;
       int evenNO=0;
       int oddNo=0;

       for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            int num = arr[i][j];
       
            if(num>0){
                posNo++;
            }else if(num<0){
                negNo++;
            }
            
            if(num %2 ==0){
                evenNO++;
            }else{
                oddNo++;
            }
          }
        }
        System.out.println("Number of positive numbers: " + posNo);
        System.out.println("Number of negative numbers: " + negNo);
        System.out.println("Number of even numbers: " + evenNO);
        System.out.println("Number of odd numbers: " + oddNo);
        System.out.println("Number of zeroes: " + zeroNo);

        scn.close();
    }
}


Q2: write a program to print the elements above the secondary diagonal in a user inputted
square matrix.
Answer: 
public class anand44xy {
    public static void main(String[] args) throws Exception{
        int[][] arr = {
            { 1,  2,  3},
            { 4,  5,  6},
            { 7,  8,  9}   
         };
       //Printing the elements above secondaray diagonal
       for (int i = 0; i <arr.length-1; i++) {
        for (int j = 0; j<arr.length-i-1; j++) {
            System.out.print(arr[i][j] + " ");
           }
      
        }
      
     }
}
Output: 1 2 4


Q3: write a program to print the elements of both the diagonals in a user inputted square matrix
in any order.
public class anand44xy {
    public static void main(String[] args) throws Exception{
        int[][] arr = {
            { 1,  2,  3},
            { 4,  5,  6},
            { 7,  8,  9}   
         };
     // Print elements of the main diagonal
       int n=arr.length;
       for (int i = 0; i < n; i++) {
          System.out.print(arr[i][i] + " ");
         }

    // Print elements of the secondary diagonal
       for (int i = 0; i < n; i++) {
          System.out.print(arr[i][n - i - 1] + " ");
         }
    
     }
}
Output: 1 5 9 3 5 7 

Q4: Write a program to find the largest element of a given 2D array of integers.
Answer: 
public class anand44xy {
    public static void main(String[] args) throws Exception{
        int[][] arr = {
            { 1,  2,   4,  0},
            { 2,  5,   7,  -1},
            { 4,  2,   6,  9}
            
         };
        int maxNo=0;
        for(int i=0; i<arr.length; i++){
            for(int j=0; j<arr[i].length;j++){
                if(arr[i][j]>maxNo){
                    maxNo=arr[i][j];
                }
               }
        }
       System.out.println("The largest element of the 2D array is: "+maxNo);

    
      
  }
}
OUTPUT:  The largest element of the 2D array is:9
 
Q.5 Write a function which accepts a 2D array of integers and its size as arguments and
            displays the elements of middle row and the elements of middle column. Printing can
            be done in any order.
            [Assuming the 2D Array to be a square matrix with odd dimensions i.e. 3x3, 5x5, 7x7 etc...]
Answer: 
public class anand44xy {
    public static void main(String[] args) throws Exception{
        int[][] arr = {
            { 1,  2,   3,  4,  5 },
            { 3,  4,   5,  6,  7 },
            { 7,  6,   5,  4,  3 },
            { 8,  7,   6,  5,  4 },
            {1,  2,   37,  8,  0 }

        };
        //printing middle row
        for(int j=0; j<arr[2].length; j++){
          System.out.print(arr[2][j]+" ");
        }
       System.out.println();

       //Printing middle column
       for(int i=0; i<arr.length;i++){
        System.out.println(arr[i][2]+" ");
       }
  }
}
OUTPUT: 
7 6 5 4 3 
3
5
5
6
37

